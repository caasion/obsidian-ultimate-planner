# 2025-10-13 Mon
I'm going to continue with what I set out to do on Friday.
- (4) Hook up UPV to `calendars` in `planner`
- (5) Implement context menu for calendars
- (2) On render, update the frozen cells and cache

## Cont of (B) Break `plannerStore` into smaller stores
- I need to test out the features to ensure that the plugin works properly after refactoring. I will perform all of these actions, and test for (1) reactivity and (2) data persistence.
    - Edit Action Item
    - Extend
    - Remove
    - Move Up/Move Down
    - Add new action item
- Editing, Moving up/down, and adding a new item is reactive and persists
- However, extending and removing from templates gives an error. These two features are currently broken, but I'm going to fix it later because it really isn't a high priority feature. I'm going to just make an issue. #11

## (4) Hook up UPV to `calendars` in `planner`
- I need to break this feature down: 
    - (4A) Rendering a calendar row
    - (4B) Menu for adding a calendar item
    - (4C) Context menu for calendar item
- I cleaned up UPV in 16eb4d9.
- Implemented rendering logic in e6d8a27.
- I removed an unused modal in c16a07d.
- In dcb2b7c and 216859a, I switched from the previous inline reactive prompt to create a new action item to use Obsidian's built-in Modal for action item creation.
    - I did this to prepare for the option to create new action item and to add a remote calendar. It is a lot cleaner to use a context menu and Obsidian Modal (and it makes the code more readable).
- In the process, I realized that my `ActionItemMeta` type doesn't inherently contain and id, while `CalendarMeta` does. I think it should internally contain and id because it makes it a lot easier to work with. As I result, I introduced a breaking change in 648832b to update the types. 
- Migration is a lot simpler than I thought. Implemented in 44831f0 and f75684a. (I made a small oopsie with for...in vs for...of.)
- Done! Although I took a detour in hooking up UPV, I believe that implementing this data type change throughout my code will make it more robust and easier to work with. (426bb5c) I can now continue working on (4B).

### (4B) Menu for adding a calendar item
- The previous code changes set me up for success. It was very easy to implement the "Add New Remote Calendar" feature in b094ae4 and f5a1e31.

### (4C) Context menu for calendar item
- Now I need to think about what I want to do with calendar rows. While action items change across time, do remote calendars really change as often as action items? Would I just not fetch from a remote calendar if it only exists for 3 days in a template?